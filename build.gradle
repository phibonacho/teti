plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "com.github.node-gradle.node" version "3.0.0-rc4"
}

group = 'it.phibonachos'
version = '0.0.5-alpha'

description = "teti"

sourceCompatibility = 13
targetCompatibility = 13

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}
dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jdbc', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.2.6.RELEASE'
    implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: '2.2.6.RELEASE'
    implementation group: 'org.springframework.session', name: 'spring-session-jdbc', version: '2.2.2.RELEASE'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.2.6.RELEASE'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    runtimeOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.2.6.RELEASE'
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

    runtimeOnly(group: 'mysql', name: 'mysql-connector-java', version: '8.0.19') {
        exclude(module: 'protobuf-java')
    }
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.2.6.RELEASE') {
        exclude(module: 'junit-vintage-engine')
    }
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.2.2.RELEASE'
}

node {
    download = true
    nodeModulesDir = file("${project.projectDir}/src/main/web/")
}

task webpack(type: YarnTask, dependsOn: 'yarn') {
    args = ['build']
}

build.dependsOn 'webpack'

if (project.hasProperty('prod')) {
    apply from: './prod.gradle'
} else if(project.hasProperty('dev')) {
    apply from: './dev.gradle'
} else {
    apply from: './h2.gradle'
}